<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xbb.stock.mapper.StockRtInfoMapper">

    <resultMap id="BaseResultMap" type="com.xbb.stock.pojo.entity.StockRtInfo">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="stockCode" column="stock_code" jdbcType="CHAR"/>
            <result property="stockName" column="stock_name" jdbcType="VARCHAR"/>
            <result property="preClosePrice" column="pre_close_price" jdbcType="DECIMAL"/>
            <result property="openPrice" column="open_price" jdbcType="DECIMAL"/>
            <result property="curPrice" column="cur_price" jdbcType="DECIMAL"/>
            <result property="minPrice" column="min_price" jdbcType="DECIMAL"/>
            <result property="maxPrice" column="max_price" jdbcType="DECIMAL"/>
            <result property="tradeAmount" column="trade_amount" jdbcType="BIGINT"/>
            <result property="tradeVolume" column="trade_volume" jdbcType="DECIMAL"/>
            <result property="curTime" column="cur_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,stock_code,stock_name,
        pre_close_price,open_price,cur_price,
        min_price,max_price,trade_amount,
        trade_volume,cur_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from stock_rt_info
        where  id = #{id,jdbcType=BIGINT} 
    </select>
    <select id="getStockInfoByTime" resultType="com.xbb.stock.pojo.domain.StockUpdownDomain">
        select
            trade_amount as tradeAmt,
            pre_close_price as preClosePrice,
            (max_price- min_price)/pre_close_price as amplitude,
            stock_code as code,
            stock_name as name,
            cur_time   as curDate,
            trade_volume as tradeVol,
            (cur_price-pre_close_price) as increase,
            (cur_price- pre_close_price)/pre_close_price as upDown,
            cur_price as tradePrice
        from stock_rt_info
        where cur_time= #{curDate}
        order by upDown desc
    </select>
    <select id="getStockUpdownCount" resultType="java.util.Map">
        select
            tmp.time as time,
            count(*) as count
        from (select
                (cur_price-pre_close_price)/pre_close_price as ud,
                date_format(cur_time,'%Y%m%d%H%i') as time
            from stock_rt_info
            where cur_time BETWEEN #{startTime} and #{endTime}
            having ud
            <if test="flag==1">
                >=0.1
            </if>
            <if test="flag==0">
                &lt;=-0.1
            </if>
            ) as tmp
        group by tmp.time
        order by tmp.time asc;
    </select>
    <!--当SQL语句遇到大量特殊字符需要转义，比如：< 等，建议使用**<![CDATA[ sql 语句 ]]>**标记-->
    <select id="getStockIncreaseRangeInfoByDate" resultType="java.util.Map">
        <![CDATA[
        select
            tmp2.title,
            count(*) as count
        from
            (select
                CASE
                    WHEN tmp.rate > 0.07 THEN  '>7%'
                    WHEN tmp.rate > 0.05 AND tmp.rate <= 0.07 THEN '5~7%'
                    WHEN tmp.rate > 0.03 AND tmp.rate <= 0.05 THEN '3~5%'
                    WHEN tmp.rate > 0 AND tmp.rate <= 0.03 THEN '0~3%'
                    WHEN tmp.rate > -0.03 AND tmp.rate <= 0 THEN '-3~0%'
                    WHEN tmp.rate > -0.05 AND tmp.rate <= -0.03 THEN '-5~-3%'
                    WHEN tmp.rate > -0.07 AND tmp.rate <= -0.05 THEN '-7~-5%'
                    ELSE '<-7%'
                END 'title'
            from
                (select
                    (cur_price-pre_close_price)/pre_close_price as rate
                from stock_rt_info
                where cur_time= #{curDate}) as tmp) as tmp2
            group by tmp2.title ]]>
    </select>
    <select id="getStock4MinuteInfo" resultType="com.xbb.stock.pojo.domain.Stock4MinuteDomain">
        select
            cur_time     as date,
            trade_amount as tradeAmt,
            stock_code as code,
            min_price lowPrice,
            pre_close_price as preClosePrice,
            stock_name as name,
            max_price as highPrice,
            open_price as openPrice,
            trade_volume as tradeVol,
            cur_price as tradePrice
        from stock_rt_info
        where	stock_code= #{code}
          and cur_time between #{startDate} and #{endDate}
    </select>
    <select id="getStock4EvrDayInfo" resultType="com.xbb.stock.pojo.domain.Stock4EvrDayDomain">
        select
            sri.cur_time as date,
            sri.trade_amount as tradeAmt,
            sri.stock_code as code,
            sri.min_price as lowPrice,
            sri.stock_name as name,
            sri.max_price as highPrice,
            sri.open_price as openPrice,
            sri.trade_volume as tradeVol,
            sri.cur_price as closePrice,
            sri.pre_close_price as preClosePrice
        from
            stock_rt_info as sri
        where sri.stock_code= #{code}  and sri.cur_time in (
            select
                max( cur_time ) as closeDate
            from
                stock_rt_info
            where
                    stock_code = #{code}
              and cur_time between #{startDate} and #{endDate}
            group by
                date_format( cur_time, '%Y%m%d' )
        )
        order by sri.cur_time;
    </select>
    <select id="getStockDetail" resultType="com.xbb.stock.pojo.domain.StockRtDomain">
        select trade_volume as tradeAmt,
           pre_close_price as preClosePrice,
           min_price as lowPrice,
           max_price as highPrice,
           open_price as openPrice,
           trade_volume as tradeVol,
           cur_price as tradePrice,
           cur_time as curDate
        from stock_rt_info
        where cur_time=#{curDate} and stock_code=#{code}
    </select>
    <select id="getStockRunningTab" resultType="java.util.Map">
        select date_format(cur_time,'%Y%m%d%H%i') as date,
        trade_amount as tradeAmt,
        trade_volume as tradeVol,
        cur_price as tradePrice
        from stock_rt_info
        where stock_code=#{code} and date_format(cur_time,'%Y%m%d')=date_format(#{curDate},'%Y%m%d') and cur_time &lt;=#{curDate}
        order by cur_time DESC
        limit 10
    </select>
    <select id="getStockScreenWeekKline" resultType="com.xbb.stock.pojo.domain.Stock4WeekDomain">
        SELECT
            tmp.stock_code as stockcode,
            tmp.maxPrice,
            tmp.minPrice,
            tmp.avgPrice,
            s1.cur_price AS openPrice,
            s2.cur_price AS closePrice,
            tmp.mxTime,
            weeks
        FROM
            (SELECT
                stock_code as stock_code,
                MAX( cur_time ) AS mxTime,
                MIN( cur_time ) AS miTime,
                MAX( cur_price ) AS maxPrice,
                MIN( cur_price ) AS minPrice,
                AVG( cur_price ) AS avgPrice,
                DATE_FORMAT( cur_time, '%Y%u' ) as weeks
            FROM
                stock_rt_info
            WHERE stock_code = #{code}
              AND cur_time BETWEEN #{pre20Week} AND #{curDate}
            GROUP BY weeks
            ) AS tmp
                LEFT JOIN stock_rt_info AS s1 ON s1.stock_code = tmp.stock_code
                AND s1.cur_time = tmp.miTime
                LEFT JOIN stock_rt_info AS s2 ON s2.stock_code = tmp.stock_code
                AND s2.cur_time = tmp.mxTime
        GROUP BY weeks
        ORDER BY mxTime ASC
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from stock_rt_info
        where  id = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xbb.stock.pojo.entity.StockRtInfo" useGeneratedKeys="true">
        insert into stock_rt_info
        ( id,stock_code,stock_name
        ,pre_close_price,open_price,cur_price
        ,min_price,max_price,trade_amount
        ,trade_volume,cur_time)
        values (#{id,jdbcType=BIGINT},#{stockCode,jdbcType=CHAR},#{stockName,jdbcType=VARCHAR}
        ,#{preClosePrice,jdbcType=DECIMAL},#{openPrice,jdbcType=DECIMAL},#{curPrice,jdbcType=DECIMAL}
        ,#{minPrice,jdbcType=DECIMAL},#{maxPrice,jdbcType=DECIMAL},#{tradeAmount,jdbcType=BIGINT}
        ,#{tradeVolume,jdbcType=DECIMAL},#{curTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xbb.stock.pojo.entity.StockRtInfo" useGeneratedKeys="true">
        insert into stock_rt_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="stockCode != null">stock_code,</if>
                <if test="stockName != null">stock_name,</if>
                <if test="preClosePrice != null">pre_close_price,</if>
                <if test="openPrice != null">open_price,</if>
                <if test="curPrice != null">cur_price,</if>
                <if test="minPrice != null">min_price,</if>
                <if test="maxPrice != null">max_price,</if>
                <if test="tradeAmount != null">trade_amount,</if>
                <if test="tradeVolume != null">trade_volume,</if>
                <if test="curTime != null">cur_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null"> #{id,jdbcType=BIGINT},</if>
                <if test="stockCode != null"> #{stockCode,jdbcType=CHAR},</if>
                <if test="stockName != null"> #{stockName,jdbcType=VARCHAR},</if>
                <if test="preClosePrice != null"> #{preClosePrice,jdbcType=DECIMAL},</if>
                <if test="openPrice != null"> #{openPrice,jdbcType=DECIMAL},</if>
                <if test="curPrice != null"> #{curPrice,jdbcType=DECIMAL},</if>
                <if test="minPrice != null"> #{minPrice,jdbcType=DECIMAL},</if>
                <if test="maxPrice != null"> #{maxPrice,jdbcType=DECIMAL},</if>
                <if test="tradeAmount != null"> #{tradeAmount,jdbcType=BIGINT},</if>
                <if test="tradeVolume != null"> #{tradeVolume,jdbcType=DECIMAL},</if>
                <if test="curTime != null"> #{curTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <insert id="insertBatch">
        insert into stock_rt_info
        ( id,stock_code,stock_name
        ,pre_close_price,open_price,cur_price
        ,min_price,max_price,trade_amount
        ,trade_volume,cur_time)
        values
        <foreach collection="list" item="info" separator=",">
            (#{info.id,jdbcType=BIGINT},#{info.stockCode,jdbcType=CHAR},#{info.stockName,jdbcType=VARCHAR}
            ,#{info.preClosePrice,jdbcType=DECIMAL},#{info.openPrice,jdbcType=DECIMAL},#{info.curPrice,jdbcType=DECIMAL}
            ,#{info.minPrice,jdbcType=DECIMAL},#{info.maxPrice,jdbcType=DECIMAL},#{info.tradeAmount,jdbcType=BIGINT}
            ,#{info.tradeVolume,jdbcType=DECIMAL},#{info.curTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xbb.stock.pojo.entity.StockRtInfo">
        update stock_rt_info
        <set>
                <if test="stockCode != null">
                    stock_code = #{stockCode,jdbcType=CHAR},
                </if>
                <if test="stockName != null">
                    stock_name = #{stockName,jdbcType=VARCHAR},
                </if>
                <if test="preClosePrice != null">
                    pre_close_price = #{preClosePrice,jdbcType=DECIMAL},
                </if>
                <if test="openPrice != null">
                    open_price = #{openPrice,jdbcType=DECIMAL},
                </if>
                <if test="curPrice != null">
                    cur_price = #{curPrice,jdbcType=DECIMAL},
                </if>
                <if test="minPrice != null">
                    min_price = #{minPrice,jdbcType=DECIMAL},
                </if>
                <if test="maxPrice != null">
                    max_price = #{maxPrice,jdbcType=DECIMAL},
                </if>
                <if test="tradeAmount != null">
                    trade_amount = #{tradeAmount,jdbcType=BIGINT},
                </if>
                <if test="tradeVolume != null">
                    trade_volume = #{tradeVolume,jdbcType=DECIMAL},
                </if>
                <if test="curTime != null">
                    cur_time = #{curTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xbb.stock.pojo.entity.StockRtInfo">
        update stock_rt_info
        set 
            stock_code =  #{stockCode,jdbcType=CHAR},
            stock_name =  #{stockName,jdbcType=VARCHAR},
            pre_close_price =  #{preClosePrice,jdbcType=DECIMAL},
            open_price =  #{openPrice,jdbcType=DECIMAL},
            cur_price =  #{curPrice,jdbcType=DECIMAL},
            min_price =  #{minPrice,jdbcType=DECIMAL},
            max_price =  #{maxPrice,jdbcType=DECIMAL},
            trade_amount =  #{tradeAmount,jdbcType=BIGINT},
            trade_volume =  #{tradeVolume,jdbcType=DECIMAL},
            cur_time =  #{curTime,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=BIGINT} 
    </update>
</mapper>
